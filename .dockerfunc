#!/bin/bash

# Helper Functions
dcleanup() {
  docker rm $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
  docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}

del_stopped() {
  local name=$1
  local state=$(docker inspect --format "{{.State.Running}}" $name 2>/dev/null)

  if [[ "$state" == "false" ]]; then
    docker rm $name
  fi
}

# Container Aliases
bower() {
  docker run --rm -it \
    -v $(pwd):/data \
    -u doe \
    jdecool/bower "$@"
}

composer() {
  docker run --rm -it \
    -v $(pwd):/app \
    -u doe \
    jdecool/composer "$@"
}

elasticsearch() {
  docker stop elasticsearch 2>/dev/null
  docker rm elasticsearch >/dev/null 2>/dev/null

  local DATADIR=$HOME/.elasticsearch
  if [ -d "$DATADIR" ]; then
    mkdir -p $DATADIR
  fi

  docker run -d \
    -p 127.0.0.1:9200:9200 \
    -p 127.0.0.1:9300:9300 \
    -v $DATADIR:/usr/share/elasticsearch/data \
    --name=elasticsearch \
    elasticsearch
}

go() {
  local GOPATH=$HOME/.go
  if [ -d "$GOPATH" ]; then
    mkdir -p $GOPATH
  fi

  docker run --rm -it \
    -v $(pwd):/usr/src/myapp \
    -v $GOPATH:/go \
    -w /usr/src/myapp \
    golang go "$@"
}

grunt() {
  docker run --rm -it \
    -v $(pwd):/data \
    -u doe \
    jdecool/grunt "$@"
}

gulp() {
  docker run --rm -it \
    -v $(pwd):/data \
    -u doe \
    jdecool/gulp "$@"
}

hhvm() {
  docker run --rm -it \
    -v $(pwd):/root \
    jdecool/hhvm "$@"
}

jekyll() {
  docker run --rm -it \
    -v $(pwd):/srv/jekyll \
    -p 127.0.0.1:4000:4000 \
    jdecool/jekyll jekyll "$@"
}

keepass2() {
  del_stopped keepass2

  docker run -d \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -v $HOME/Documents:/home/doe/Documents \
    -e DISPLAY=unix$DISPLAY \
    -u doe \
    --name keepass2 \
    jdecool/keepass2 "$@"
}

mongo() {
  del_stopped mongo

  local DATADIR=$HOME/.mongodb
  if [ -d "$DATADIR" ]; then
    mkdir -p $DATADIR
  fi

  docker run -d \
    -p 127.0.0.1:27017:27017 \
    -v $DATADIR:/data/db \
    --name=mongo \
    mongo
}

mvn() {
  local DATADIR=$HOME/.maven
  if [ -d "$DATADIR" ]; then
    mkdir -p $DATADIR
  fi

  docker run --rm -it \
    -v $(pwd):/usr/src \
    -v $DATADIR:/home/doe \
    -w /usr/src \
    -u doe \
    jdecool/maven:latest mvn "$@"
}

mycli() {
  docker run --rm -it \
    --net host \
    jdecool/mycli "$@"
}

mysql() {
  docker stop mysql 2>/dev/null
  docker rm mysql >/dev/null 2>/dev/null

  local DATADIR=$HOME/.mysql
  if [ -d "$DATADIR" ]; then
    mkdir -p $DATADIR
  fi

  docker run -d \
    -e MYSQL_ROOT_PASSWORD=root \
    -p 127.0.0.1:3306:3306 \
    -v $DATADIR:/var/lib/mysql \
    --name=mysql \
    mysql
}

mysql-workbench() {
  del_stopped mysql-workbench

  local DATADIR=$HOME/.mysql-workbench
  if [ -d "$DATADIR" ]; then
    mkdir -p $DATADIR
  fi

  docker run -d \
    --net host \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -v $DATADIR:/root/.mysql/workbench \
    -e DISPLAY=unix$DISPLAY \
    --name mysql-workbench \
    jdecool/mysql-workbench "$@"
}

node() {
  docker run --rm -it \
    -v $(pwd):/usr/src/myapp \
    -w /usr/src/myapp \
    --name nodejs \
    node:latest node "$@"
}

pgadmin() {
  del_stopped pgadmin

  local DATADIR=$HOME/.pgadmin
  if [ -d "$DATADIR" ]; then
    mkdir -p $DATADIR
  fi

  docker run -d \
    --net host \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -v $DATADIR:/root \
    -e DISPLAY=unix$DISPLAY \
    --name pgadmin \
    jdecool/pgadmin "$@"
}

pgcli() {
  docker run --rm -it \
    --net host \
    jdecool/pgcli "$@"
}

postgres() {
  docker stop postgres 2>/dev/null
  docker rm postgres >/dev/null 2>/dev/null

  local DATADIR=$HOME/.postgres
  if [ -d "$DATADIR" ]; then
    mkdir -p $DATADIR
  fi

  docker run -d \
    -e POSTGRES_PASSWORD=root \
    -p 127.0.0.1:5432:5432 \
    -v $DATADIR:/var/lib/postgresql/data \
    --name=postgres \
    postgres
}

redis() {
  docker stop redis 2>/dev/null
  docker rm redis >/dev/null 2>/dev/null

  local DATADIR=$HOME/.redis
  if [ -d "$DATADIR" ]; then
    mkdir -p $DATADIR
  fi

  docker run -d \
    -p 127.0.0.1:6379:6379 \
    -v $DATADIR:/data \
    --name=redis \
    redis
}

virtualbox() {
  del_stopped virtualbox

  docker run -d \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -v $HOME/Documents:/root/Documents \
    -e DISPLAY=unix$DISPLAY \
    --privileged \
    --name virtualbox \
    jdecool/virtualbox
}
